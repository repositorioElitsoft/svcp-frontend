name: 'Build and Deploy Angular to GKE'

on:
  push:
    branches:
      - master

env:
  PROJECT_ID: 'servicampo-dev'             # Reemplaza con tu ID de proyecto en Google Cloud
  GAR_LOCATION: 'us-central1-a'          # Reemplaza con la región de Artifact Registry
  GKE_CLUSTER: 'servicampo-1-cluster'    # Reemplaza con el nombre de tu clúster en GKE
  GKE_ZONE: 'us-central1-a'              # Reemplaza con la zona de tu clúster
  DEPLOYMENT_NAME: 'frontend'            # Nombre de tu despliegue en Kubernetes
  REPOSITORY: 'frontend'                 # Nombre de tu repositorio en Artifact Registry
  IMAGE: 'frontend'

jobs:
  build-deploy:
    name: 'Build, Push, and Deploy'
    runs-on: 'ubuntu-latest'
    environment: 'production'

    permissions:
      contents: 'read'
      id-token: 'write'  # Necesario para Workload Identity Federation

    steps:
      - name: 'Checkout Code'
        uses: actions/checkout@v4

      # Autenticación con Google Cloud usando Workload Identity Federation
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: 'projects/YOUR_PROJECT_NUMBER/locations/global/workloadIdentityPools/github-pool/providers/github-provider'
          service_account: 'YOUR_SERVICE_ACCOUNT_EMAIL'  # Reemplaza con el email de tu Service Account

      - name: 'Docker Auth'
        uses: docker/login-action@v3
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'
          registry: '${{ env.GAR_LOCATION }}-docker.pkg.dev'

      - name: 'Build and Push Docker Image'
        run: |
          DOCKER_TAG="${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:${{ github.sha }}"
          docker build -t "$DOCKER_TAG" .
          docker push "$DOCKER_TAG"

      - name: 'Set up GKE credentials'
        uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: '${{ env.GKE_CLUSTER }}'
          location: '${{ env.GKE_ZONE }}'

      - name: 'Deploy to GKE'
        run: |
          kubectl set image deployment/${{ env.DEPLOYMENT_NAME }} angular-app=${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:${{ github.sha }}
          kubectl rollout status deployment/${{ env.DEPLOYMENT_NAME }}
          kubectl get services -o wide
